version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: notes_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: notesdb
      MYSQL_USER: notesuser
      MYSQL_PASSWORD: notespassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - notes_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  api:
    build:
      context: ./NotesApi
      dockerfile: Dockerfile
    container_name: notes_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=notesdb;Uid=notesuser;Pwd=notespassword;
    ports:
      - "5197:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - notes_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  frontend:
    build:
      context: ./NotesUI
      dockerfile: Dockerfile
    container_name: notes_ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE_URL=http://localhost:5197/api
    depends_on:
      api:
        condition: service_healthy
    networks:
      - notes_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  notes_network:
    driver: bridge
